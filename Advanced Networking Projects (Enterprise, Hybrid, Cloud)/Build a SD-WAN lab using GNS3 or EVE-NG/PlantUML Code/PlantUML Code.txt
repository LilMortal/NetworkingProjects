const boardEl = document.getElementById("board");
const messageEl = document.getElementById("message");

let board = Array(9).fill(null);
let player = "X";
let computer = "O";
let gameActive = false;

const winCombos = [
  [0,1,2],[3,4,5],[6,7,8], // rows
  [0,3,6],[1,4,7],[2,5,8], // cols
  [0,4,8],[2,4,6]          // diagonals
];

function startGame(playerSymbol) {
  player = playerSymbol;
  computer = player === "X" ? "O" : "X";
  board = Array(9).fill(null);
  gameActive = true;
  messageEl.textContent = "";
  renderBoard();

  if (computer === "X") {
    setTimeout(computerMove, 500);
  }
}

function renderBoard() {
  boardEl.innerHTML = "";
  board.forEach((cell, idx) => {
    const div = document.createElement("div");
    div.classList.add("cell");
    div.textContent = cell || "";
    div.addEventListener("click", () => playerMove(idx));
    boardEl.appendChild(div);
  });
}

function playerMove(idx) {
  if (!gameActive || board[idx]) return;

  board[idx] = player;
  renderBoard();

  if (checkWinner(player)) {
    endGame(`You win!`);
    return;
  }

  if (board.every(cell => cell)) {
    endGame("It's a draw!");
    return;
  }

  setTimeout(computerMove, 500);
}

function computerMove() {
  if (!gameActive) return;

  let move = findBestMove();
  board[move] = computer;
  renderBoard();

  if (checkWinner(computer)) {
    endGame(`Computer wins!`);
    return;
  }

  if (board.every(cell => cell)) {
    endGame("It's a draw!");
  }
}

function findBestMove() {
  // Try to win
  for (let i = 0; i < 9; i++) {
    if (!board[i]) {
      board[i] = computer;
      if (checkWinner(computer)) {
        board[i] = null;
        return i;
      }
      board[i] = null;
    }
  }

  // Try to block
  for (let i = 0; i < 9; i++) {
    if (!board[i]) {
      board[i] = player;
      if (checkWinner(player)) {
        board[i] = null;
        return i;
      }
      board[i] = null;
    }
  }

  // Otherwise random
  let empty = board.map((val, i) => val ? null : i).filter(i => i !== null);
  return empty[Math.floor(Math.random() * empty.length)];
}

function checkWinner(symbol) {
  return winCombos.some(combo => 
    combo.every(i => board[i] === symbol)
  );
}

function endGame(msg) {
  messageEl.textContent = msg;
  gameActive = false;
  setTimeout(() => startGame(player), 2000);
}
