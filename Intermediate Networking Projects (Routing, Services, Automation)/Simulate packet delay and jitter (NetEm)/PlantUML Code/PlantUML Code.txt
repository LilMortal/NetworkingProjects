@startuml
title Simulate Packet Delay and Jitter using NetEm (tc)

skinparam rectangle {
  BackgroundColor #F8F9FA
  BorderColor #4682B4
  RoundCorner 10
}

skinparam node {
  BackgroundColor #FFFFFF
  BorderColor #1E90FF
}

' Define nodes in the test environment
node "Client A\n192.168.1.10\n(Linux)" as ClientA
node "Linux Bridge/Router\nWith NetEm Applied" as NetEmHost
node "Server B\n192.168.1.20\n(Test Receiver)" as ServerB

ClientA --> NetEmHost : ICMP / TCP / UDP traffic
NetEmHost --> ServerB : Forward with delay/jitter
ServerB --> NetEmHost : Response (ACK, reply)
NetEmHost --> ClientA : Forward back (with delay)

rectangle "NetEm Configuration Steps\n(on Linux router/bridge)" as Config {
  rectangle "1. Install Required Tools\nsudo apt install iproute2" as Step1
  rectangle "2. Apply Delay and Jitter to Interface\nExample:\ntc qdisc add dev eth0 root netem delay 100ms 20ms distribution normal" as Step2
  rectangle "3. Simulate Packet Loss (Optional)\ntc qdisc change dev eth0 root netem loss 2%" as Step3
  rectangle "4. Verify Configuration\ntc qdisc show dev eth0" as Step4
  rectangle "5. Remove/Reset Settings\ntc qdisc del dev eth0 root" as Step5
}

NetEmHost --> Config

note right of Step2
Adds 100ms average delay\nwith 20ms jitter\nusing normal distribution.
end note

note right of Step3
Adds 2% packet loss simulation\nfor realism.
end note

note right of Step4
Use to inspect active NetEm configuration.
end note

note right of Step5
Always clean up test configuration\nafter experiments.
end note

@enduml
